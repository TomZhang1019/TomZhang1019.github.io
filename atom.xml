<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TomZhang</title>
  
  
  <link href="https://tomzhang1019.github.io/atom.xml" rel="self"/>
  
  <link href="https://tomzhang1019.github.io/"/>
  <updated>2023-03-08T13:51:24.604Z</updated>
  <id>https://tomzhang1019.github.io/</id>
  
  <author>
    <name>TomZhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://tomzhang1019.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E7%8E%87%E7%AC%94%E8%AE%B0/"/>
    <id>https://tomzhang1019.github.io/2023/03/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E7%8E%87%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-08T13:03:20.383Z</published>
    <updated>2023-03-08T13:51:24.604Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库相关名词解释"><a href="#数据库相关名词解释" class="headerlink" title="数据库相关名词解释"></a>数据库相关名词解释</h3><p><strong>数据</strong>: 描述事物的符号记录<br><strong>数据库</strong>: 长期存储在计算机内有组织的, 可共享的大量数据的集合<br><strong>数据库管理系统</strong>: 位于用户与操作系统之间的一层数据管理软件<br><strong>数据库系统</strong>: 由数据库, 数据库管理系统, 应用程序和数据库管理员组 成的存储, 管理, 处理和维护数据的系统</p><h3 id="数据库系统的特点"><a href="#数据库系统的特点" class="headerlink" title="数据库系统的特点"></a>数据库系统的特点</h3><ol><li>数据结构化</li><li>数据的共享性高, 冗余度低且易扩充</li><li>数据独立性高</li><li>数据由数据库管理系统统一管理和控制</li></ol><h3 id="数据库管理系统的主要功能"><a href="#数据库管理系统的主要功能" class="headerlink" title="数据库管理系统的主要功能"></a>数据库管理系统的主要功能</h3><ol><li>数据定义功能</li><li>数据组织, 存储和管理</li><li>数据操纵功能</li><li>数据库的事务管理和运行管理</li><li>数据库的建立和维护功能</li></ol><h3 id="概念模型"><a href="#概念模型" class="headerlink" title="概念模型"></a>概念模型</h3><p>概念模型是现实世界到机器世界的一个中间层次<br><strong>作用</strong>: 概念模型用于信息世界的建模, 是数据库设计人员进行数据库设计的有力工具, 也是数据库设计人员和用户之间进行交流的语言</p><h3 id="实体型相关名词解释"><a href="#实体型相关名词解释" class="headerlink" title="实体型相关名词解释"></a>实体型相关名词解释</h3><p><strong>实体</strong>: 客观存在并可以相互区分的事物叫实体<br><strong>实体型</strong>: 用实体名及其属性名集合来抽象和刻画同类实体称为实体型<br><strong>实体集</strong>: 同型实体的集合称为实体集<br><strong>实体之间的联系</strong>：包括实体(型)内部的联系和实体(型)之间的联系. 实体内部的联系通常是指组成实体的各属性之间的联系; 实体之间的联系通常是指不同实体集之间的联系. 实体之间的联系有一对一、一对多和多对多等多种类型</p><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><p>数据模型是数据库系统中最重要的概念之一。数据模型是数据库中用来对现实世界进行抽象的工具，是数据库中用于提供信息表示和操作手段的形式构架。</p><p>数据模型是数据库系统的基础。任何一个DBMS都以某一个数据模型为基础，或者说支持某一个数据模型。<br>数据模型通常由数据结构、数据操作和完整性约束三部分组成。<br>①数据结构：描述数据库的组成对象和对象之间的联系，是对系统的静态特性的描述。<br>②数据操作：是指对数据库中各种对象(型)的实例(值)允许进行的操作的集合，包括操作及有关的操作规则，是对系统动态特性的描述。<br>③数据的约束条件：是完整性规则的集合，完整性规则是给定的数据模型中数据及其联系所具有的制约和依存规则，用以限定符合数据模型的数据库状态以及状态的变化，以保证数据的正确、有效和相容。<br>解析：数据库系统中模型有不同的层次。根据模型应用的不同目的，可以将模型分成两类或者说两个层次：一是概念模型，是按用户的观点来对数据和信息建模，用于信息世界的建模，强调语义表达能力，概念简单清晰；二是数据模型，是按计算机系统的观点对数据建模，用于机器世界，人们可以用它定义和操纵数据库中的数据。</p><h3 id="层次模型"><a href="#层次模型" class="headerlink" title="层次模型"></a>层次模型</h3><p>满足下面两个条件的基本层次联系的集合为层次模型。<br>①有且只有一个结点没有双亲结点，这个结点称为根结点；<br>②根以外的其他结点有且只有一个双亲结点。</p><p>实例:</p><h3 id="网状模型"><a href="#网状模型" class="headerlink" title="网状模型"></a>网状模型</h3><p>满足下面两个条件的基本层次联系的集合为网状模型。<br>①允许一个以上的结点无双亲；<br>②一个结点可以有多于一个的双亲。</p><p>实例: </p><h3 id="层次数据库和网状数据库优缺点"><a href="#层次数据库和网状数据库优缺点" class="headerlink" title="层次数据库和网状数据库优缺点"></a>层次数据库和网状数据库优缺点</h3><p>层次数据库的优点主要有：<br>①层次数据库的数据结构比较简单清晰；<br>②层次数据库的查询效率高；<br>③层次数据数据库提供了良好的完整性支持。<br>层次数据库的缺点主要是：<br>①现实世界中很多联系是非层次性的，层次数据库不能自然地表示这类联系；<br>②层次数据库中的查询必须按照层次结构从根结点开始，沿着路径进行。因此，用户必须清楚所用数据库的层次结构，对用户的要求自然比较高了。<br>网状数据库的优点主要有：<br>①能够更为直接地描述现实世界，如一个结点可以有多个双亲。<br>②具有良好的性能，存取效率较高。<br>网状数据库的缺点主要是：<br>①结构比较复杂，而且随着应用环境的扩大，数据库的结构变得越来越复杂，不利于最终用户掌握。<br>②网状数据库的数据定义语言(DDL)、数据操纵语言(DML)比较复杂，要求用户掌握数据库结构和存取路径，不容易使用。</p><h3 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h3><p>关系模型由关系数据结构、关系操作集合和关系完整性约束三部分组成。在用户观点下，关系模型中数据的逻辑结构是一张二维表，它由行和列组成。<br>①关系：一个关系对应通常说的一张表。<br>②属性：表中的一列即为一个属性。<br>③域：属性的取值范围。<br>④元组：表中的一行即为一个元组。<br>⑤码：表中的某个属性组，它可以唯一确定一个元组。<br>⑥分量：元组中的一个属性值。<br>⑦关系模式：对关系的描述，一般表示为<br>关系名(属性1,属性2,⋯,属性n)</p><h3 id="关系数据库特点"><a href="#关系数据库特点" class="headerlink" title="关系数据库特点"></a>关系数据库特点</h3><p>①关系模型与非关系模型不同，它具有严格的数学基础。<br>②关系模型的概念单一，所以其数据结构简单、清晰，用户易懂易用。<br>③关系模型的存取路径对用户透明，从而具有更高的数据独立性、更好的安全保密性，也简化了程序员的工作和数据库开发建立的工作。<br>当然，关系数据模型也有缺点，其中最主要的是，由于存取路径对用户透明，查询效率往往不如非关系数据模型。因此为了提高性能，必须对用户的查询请求进行优化，这就增加了开发关系数据库管理系统软件的难度。</p><h3 id="数据库系统三级模式结构和及此结构优点"><a href="#数据库系统三级模式结构和及此结构优点" class="headerlink" title="数据库系统三级模式结构和及此结构优点"></a>数据库系统三级模式结构和及此结构优点</h3><p>数据库系统的三级模式结构由外模式、模式和内模式组成<br>外模式，亦称子模式或用户模式，是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图。<br>模式，亦称逻辑模式，是数据库中全体数据的逻辑结构和特性的描述，是所有用户的公共数据视图。模式描述的是数据的全局逻辑结构。外模式通常是模式的子集。<br>内模式，亦称存储模式，是数据在数据库系统内部的表示，即对数据的物理结构和存储方式的描述。<br>为了能够在内部实现这三个抽象层次的联系和转换，数据库系统在这三级模式之间提供了两级映像：外模式/模式映像和模式/内模式映像。正是这两级映像保证了数据库系统中的数据能够具有较高的逻辑独立性和物理独立性。</p><h3 id="相关名词解释"><a href="#相关名词解释" class="headerlink" title="相关名词解释"></a>相关名词解释</h3><p>模式、外模式、内模式的解释参见第15题。<br>数据定义语言：用来定义数据库模式、外模式和内模式的语言。<br>数据操纵语言：用来对数据库中的数据进行查询、插入、删除和修改的语句。</p><h3 id="数据与程序的独立性"><a href="#数据与程序的独立性" class="headerlink" title="数据与程序的独立性"></a>数据与程序的独立性</h3><p>数据与程序的物理独立性：当数据库的存储结构发生改变时，由数据库管理员对模式/内模式映像作相应改变，可以使模式保持不变，从而应用程序也不必改变，这就是数据与程序的物理独立性，简称数据的物理独立性。\</p><p>数据与程序的逻辑独立性：当数据的逻辑结构即模式改变时，由数据库管理员对各个外模式/模式的映像作相应改变，可以使外模式保持不变，从而应用程序不必修改，这就是数据与程序的逻辑独立性，简称数据的逻辑独立性。</p><p>DBMS在三级模式之间提供的两级映像保证了数据库系统中的数据能够具有较高的逻辑独立性和物理独立性。</p><h3 id="数据库系统的组成"><a href="#数据库系统的组成" class="headerlink" title="数据库系统的组成"></a>数据库系统的组成</h3><p>数据库系统一般由数据库、数据库管理系统(及其开发工具)、应用系统、数据库管理员和用户构成。详细内容参考《概论》第31~34页。</p><h3 id="相关名词解释-1"><a href="#相关名词解释-1" class="headerlink" title="相关名词解释"></a>相关名词解释</h3><p>数据库管理员全面负责管理和控制数据库系统。具体职责包括：<br>①决定数据库的信息内容和结构；<br>②决定数据库的存储结构和存取策略；<br>③定义数据的安全性要求和完整性约束条件；<br>④监控数据库的使用和运行；<br>⑤数据库系统的改进和重组重构。<br>系统分析员负责应用系统的需求分析和规范说明，他要和用户及DBA相结合，确定系统的硬件软件配置，并参与数据库系统的概要设计。<br>数据库设计人员负责数据库中数据的确定和数据库各级模式的设计。数据库设计人员必须参加用户需求调查和系统分析，然后进行数据库设计。<br>应用程序员负责设计和编写应用系统的程序模块，并进行调试和安装。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数据库相关名词解释&quot;&gt;&lt;a href=&quot;#数据库相关名词解释&quot; class=&quot;headerlink&quot; title=&quot;数据库相关名词解释&quot;&gt;&lt;/a&gt;数据库相关名词解释&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;数据&lt;/strong&gt;: 描述事物的符号记录&lt;br&gt;&lt;strong&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://tomzhang1019.github.io/2023/03/06/test/"/>
    <id>https://tomzhang1019.github.io/2023/03/06/test/</id>
    <published>2023-03-06T15:23:07.547Z</published>
    <updated>2023-03-06T15:23:45.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="测试-测试-测试"><a href="#测试-测试-测试" class="headerlink" title="测试 测试 测试"></a>测试 测试 测试</h3><p>测试 测试<br>测试 测试<br>测试 测试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;测试-测试-测试&quot;&gt;&lt;a href=&quot;#测试-测试-测试&quot; class=&quot;headerlink&quot; title=&quot;测试 测试 测试&quot;&gt;&lt;/a&gt;测试 测试 测试&lt;/h3&gt;&lt;p&gt;测试 测试&lt;br&gt;测试 测试&lt;br&gt;测试 测试&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://tomzhang1019.github.io/2023/03/05/hello-world/"/>
    <id>https://tomzhang1019.github.io/2023/03/05/hello-world/</id>
    <published>2023-03-05T02:38:46.156Z</published>
    <updated>2023-03-06T14:20:59.495Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my first blog in github.io.</p><h1 id="博客说明"><a href="#博客说明" class="headerlink" title="博客说明"></a>博客说明</h1><p>此博客用于记录生活, 学习及工作.<br>包括但不限于</p><ul><li><code>Kotlin</code></li><li><code>Android</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to my first blog in github.io.&lt;/p&gt;
&lt;h1 id=&quot;博客说明&quot;&gt;&lt;a href=&quot;#博客说明&quot; class=&quot;headerlink&quot; title=&quot;博客说明&quot;&gt;&lt;/a&gt;博客说明&lt;/h1&gt;&lt;p&gt;此博客用于记录生活, 学习及工作</summary>
      
    
    
    
    
  </entry>
  
</feed>
